using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace HLDJConverter
{
    public sealed class FFmpegConverter
    {
        public static Task ConvertToWavAsync(string srcFilepath, string dstFolder, string dstFilename = null)
        {
            if(string.IsNullOrEmpty(dstFilename))
                dstFilename = Path.GetFileNameWithoutExtension(srcFilepath);
            
            dstFilename = RemoveInvalidFilenameCharacters(dstFilename);

            string destination = $"{dstFolder}\\{dstFilename}.wav";

            var process = new Process();
            process.EnableRaisingEvents = true;
            var processCompletionTask = new TaskCompletionSource<object>();
            process.Exited += async (s, a) =>
            {
                await Task.Run(async () => await FixFFmpegWavFileHeader(destination));
                processCompletionTask.SetResult(null);
            };
            process.StartInfo = new ProcessStartInfo
            {
                //RedirectStandardOutput = true,
                //RedirectStandardError = true,
                UseShellExecute = false,
                CreateNoWindow = true,
                FileName = @"ffmpeg.exe",
                Arguments = $"-y -i \"{srcFilepath}\" -map_metadata -1 -aq 100 -ac 1 -acodec pcm_s16le -ar 22050 \"{destination}\"",
                
            };
            
            process.Start();

            return processCompletionTask.Task;
        }

        public static string RemoveInvalidFilenameCharacters(string filename)
        {
            // Remove all invalid filename characters
            var result = Regex.Replace(filename, "[\\*/:<>?|\"]", "");

            // Remove all non-english characters. HLDJ can't properly parse them.
            result = Regex.Replace(result, @"[^a-zA-Z0-9% ._,'~#()\-\[\]]", "");

            return result.Trim(' ', '-');
        }

        /// <summary>
        /// HLDJ cannot read wav files generated by ffmpeg because of some extra data in the wav file's header.
        /// This method removes that data.
        /// </summary>
        /// <param name="filename"></param>
        private static async Task FixFFmpegWavFileHeader(string filename)
        {
            const int FFmpegHeaderSizeInBytes = 34;

            // Load the file into memory
            byte[] data;
            using(var file = File.OpenRead(filename))
            {
                data = new byte[file.Length - FFmpegHeaderSizeInBytes];
                
                // Read the file into the data buffer, skipping over the FFmpeg header data.
                await file.ReadAsync(data, 0, 36);
                file.Seek(FFmpegHeaderSizeInBytes, SeekOrigin.Current);
                await file.ReadAsync(data, 36, (int)(file.Length - file.Position));
            }
            
            // Set the new file size
            byte[] filesize = BitConverter.GetBytes(data.Length);
            data[4] = filesize[0];
            data[5] = filesize[1];
            data[6] = filesize[2];
            data[7] = filesize[3];

            // Save
            File.WriteAllBytes(filename, data);
        }
    }
}
